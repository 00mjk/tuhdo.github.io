#+TITLE: An introduction to Projectile and Helm Projectile

From the homepage:

#+BEGIN_QUOTE
=Projectile= is a project interaction library for Emacs. Its goal is to
provide a nice set of features operating on a project level without
introducing external dependencies(when feasible). For instance -
finding project files has a portable implementation written in pure
Emacs Lisp without the use of GNU find (but for performance sake an
indexing mechanism backed by external commands exists as well).

Projectile tries to be practical - portability is great, but if some
external tools could speed up some task substantially and the tools
are available, Projectile will leverage them.

By default, =git=, =mercurial=, =darcs= and =bazaar= are considered
projects. So are =lein=, =maven=, =sbt=, =scons=, =rebar= and
=bundler=. If you want to mark a folder manually as a project just
create an empty =.projectile= file in it.
#+END_QUOTE

This tutorial will help you quickly benefit from =projectile= and
=helm-projectile= - an extension of =projectile= that uses =helm=
interface for many =projectile= commands that provides even more
features not available in stock =projectile= - in a practical task like
exploring the Linux kernel. 

This tutorial is about how to use Projectile along with Helm. There
are other completion systems such as =grizzl= or =ido= with =flx=, both use
fuzzy finding. Helm also does almost the same thing, except instead of
fuzzy matching, Helm uses regex matching and provides more features
beyond matching. If you do not like Helm, just follow this tutorial,
then change completion system to your preference later.

Let's start with a few demos.

* Demos
:PROPERTIES:
:ID:       0d349662-dba2-423b-bd99-d23c9f45cb3a
:END:
** Select and open multiple files
:PROPERTIES:
:ID:       9fef8c0b-1123-4bd1-9a35-b6ae1636cc1d
:END:

[screenshot]

** Open file at point anywhere
:PROPERTIES:
:ID:       ddf35ac3-6090-4f49-a358-8085ad30000f
:END:

[screenshot]

As you can see in the demo, Projectile can jump anywhere, even if
there's only a filename without path. It works everywhere, even in
text file.

** Switch between projects with or without leaving current project
:PROPERTIES:
:ID:       d7b2632e-dac4-4452-bb5e-342848a51989
:END:

[screenshot] 

** Switch between current file and other file with same names but different extensions (customizable)
:PROPERTIES:
:ID:       37f4d587-ab1f-417b-a949-b7e5ac6041c0
:END:

* Installation and configuration
:PROPERTIES:
:ID:       c85c6d2f-d00d-41ef-8f07-3d52d23c92a6
:END:
You also install =Projectile= via MELPA and setup:

#+begin_src emacs-lisp
  (projectile-global-mode)

  (setq projectile-completion-system 'helm
        projectile-switch-project-action 'helm-projectile)

  (helm-projectile-on)
#+end_src

All Projectile commands has prefix =C-c p=.

* All-in-one command: =helm-projectile=, *C-c p h*
:PROPERTIES:
:ID:       cd4cc853-affb-4b2a-a894-55a583c9b756
:END:

* Enter project portal: =helm-projectile-switch-project=, *C-c p p*
:PROPERTIES:
:ID:       8ed44f1d-2b07-4c3d-b11b-f6e72f5eeded
:END:
This is the very first command you need to use before using other
commands, because this is the entrance to all of your projects and
this is the only command that can be used outside of a project. The
command lists all visited projects. If you first use Projectile, you
have to visit at least a project supported by Projectile to let it
remember the location of this project. The next time you won't have to
manually navigate that project but jump to it instantly using
=helm-projectile-switch-project=.

[screenshot]

Available actions:

- =Switch to project= (default action bound to *RET*):

[screenshot]

- =Open Dired in project's directory= (*C-d* or *f1*):
- =Open project root in vc-dir or magit= (*M-g* or *f2*):
- =Switch to Eshell= (*M-e* or *f3*):
- =Grep in projects= (*C-s* or *f4*):
- =Compile project= (*C-c* or *f5*):

* File management
:PROPERTIES:
:ID:       b217795d-c945-4a63-8f22-ce7eaf7ebc5d
:END:
** Command: =helm-projectile-find-file=, *C-c p f*
:PROPERTIES:
:ID:       d5bf76c1-08af-4429-83bf-18615cbafb95
:END:
This command lists all files in a project for users to narrow 
down to wanted files. Some frequently used actions that cover open,
rename, copy, delete,search and other miscelaneous operations. Once
you mastered the actions of =helm-projectile-find-file=, you master
the actions of other commands as well since the actions of other
commands are just a subset of =helm-projectile-find-file= actions. All
the key bindings associated with actions are only available while a
Helm buffer is active. You can think of actions as an mini version of
*M-x*: only applicable commands are listed, and even those commands
have key bindings. Prefix argument can be applied, when possible.

The same Helm interface can be used to search for an action. The first
12 actions are bound from *<f1>* to *<f12>*. You can type the index
number to instantly narrow to that action, or simply press respective
key.

*** Open 
:PROPERTIES:
:ID:       400557f8-b7a0-4ea7-9744-3d9d3356867d
:END:

+ =Find File= (default action bound to *RET*): open files; if multiple
  files are marked, open them all.

  [screenshot]

+ =Find file other window= (*C-c o*)
  
  [screenshot]

+ =Find file other frame= (*C-c C-o*)

+ =Find File in Dired=: 

  [screenshot]

+ =Find file as root= (*C-x @*)

  [screenshot]

+ =Find file in hex dump=: Open file using [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Editing-Binary-Files.html][hexl]].

+ =View file=: Open file for read-only.

+ =Open file externally= (*C-c C-x*, add prefix *C-u* to choose a
  program): Open file using external applications. Once an application
  is selected, it is remembered as default application for the
  selected file type.

*** Rename 
:PROPERTIES:
:ID:       df231b0d-9a59-45b0-9b29-6f47ff19ff55
:END:
- =Rename file(s)= (*M-R*): Rename selected files. You must have two
  buffers side by side: one is a buffer that is running current
  =helm-projectile-find-file= command and another is destination
  buffer. When this action is executed, it copies marked files to the
  directory of destination buffers.

  [screenshot]

- =Serial rename files=: Rename multiple files at once.

[screenshot]

- =Serial rename by symlinking files=:

- =Serial rename by copying files=:

*** Copy and Delete
:PROPERTIES:
:ID:       0276d133-1547-4c46-a598-324add5eeb27
:END:
- =Copy file(s)= (*M-C*): similar to =Rename File(s)= action but copy
  files instead.

- =Delete File(s)= (*C-c d* or *M-D*): delete marked file(s).

*** Search and Replace
:PROPERTIES:
:ID:       bb0e3512-f3f1-42c2-80ec-50d47fc7ba57
:END:

- =Grep File(s)= (*C-s*; add *C-u* before *C-s* for recursive
  grep):

- =Zgrep=

- =Locate= (*C-x C-f*, add *C-u* to specify locate db):

*** Miscelaneous
:PROPERTIES:
:ID:       3822d245-6836-469d-bc2f-45a0a6e4b941
:END:
- =Switch to history= (*M-p*): 

- =Ediff File= (*C-=*):

- =Ediff Merge File= (*C-c =*):

- =Symlink files(s)= (*M-S): Create symbolic link, using absolute
  path. If another buffer is available, choose the directory of that
  buffer as destination, similar to =Rename files(s)= action.

- =Relsymlink file(s)=: Create symbolic link, using relative path. If
  another buffer is available, choose the directory of that buffer as
  destination, similar to =Rename files(s)= action.

- =Hardlink file(s)= (*M-H*): Create hard link. If another buffer is
  available, choose the directory of that buffer as destination,
  similar to =Rename files(s)= action.

- 

- =Checksum File=:

- =Print File= (*C-c p*, add *C-u* to refresh): 

** Command: =helm-projectile-find-file-dwim=, *C-c p g*
:PROPERTIES:
:ID:       5fcd616f-a139-4c0a-a4ff-5e2c435d08a3
:END:
Find file based on context at point (do what you mean):

- If it finds just a file, it switches to that file instantly.  This
  works even if the filename is incomplete, but there's only a single
  file in the current project that matches the filename at point. For
  example, if there's only a single file named
  "projectile/projectile.el" but the current filename is
  "projectile/proj" (incomplete), the command still switches
  to "projectile/projectile.el" immediately because this is the only
  filename that matches.

- If it finds a list of files, the list is displayed for selecting. A
  list of files is displayed when a filename appears more than one in
  the project or the filename at point is a prefix of more than two
  files in a project. For example, if `projectile-find-file' is
  executed on a path like "projectile/", it lists the content of that
  directory. If it is executed on a partial filename like
  "projectile/a", a list of files with character 'a' in that directory
  is presented.

- If it finds nothing, display a list of all files in project for
  selecting.

This command is demonstrated at the beginning [[*Open%20file%20at%20point%20anywhere,%20based%20on%20context%20(do%20what%20you%20mean):][Open file at point
anywhere, based on context (do what you mean)]]. 

** Command: =helm-projectile-find-dir=, *C-c p d*
:PROPERTIES:
:ID:       ff87062c-1e31-4601-89fb-19df0dd01e7b
:END:
List of available directories in the current project. Available
actions:

- =Open Dired in project's directory=: Open the directory in a Dired
  buffer.
- =Switch to Eshell= (*M-e*): Open the directory in Eshell.
- =Grep in projects= (*C-s*; add prefix *C-u* for recurse Grep): Run
  =grep= on selected directory.

** Command: =helm-projectile-recentf=, *C-c p e*
:PROPERTIES:
:ID:       e6e3eb34-1de4-4d4c-875d-47e94503f572
:END:
List recently visited files in *current project*. The command has a
subset of actions in =helm-projectile-find-file=, so once you mastered
the actions in =helm-projectile-find-file=, you don't need to learn
anything else.

** Command: =helm-projectile-find-other-file=, *C-c p a*
:PROPERTIES:
:ID:       74179568-a5b0-4a8f-8f30-b75959d4e190
:END:
Switch between files with the same name but different extensions. With
prefix argument *C-u*, enable flex-matching that match any file that
contains the name of current file. The command has a subset of actions
in =helm-projectile-find-file=, so once you mastered the actions in
=helm-projectile-find-file=, you don't need to learn anything else.

Other file extensions can be customized with the variable
=projectile-other-file-alist=.

[screenshot]

** Caching
:PROPERTIES:
:ID:       5a69b97f-e61f-4633-b6c8-9dc6cc1ac751
:END:
*** Command: =projectile-invalidate-cache=
:PROPERTIES:
:ID:       e33dd757-4594-466a-b194-ceba73f16b44
:END:

*** Command: =projectile-cache-current-file=
:PROPERTIES:
:ID:       ca3915b7-2dc7-49c4-bd7a-194121936f91
:END:

* Buffer management
:PROPERTIES:
:ID:       bc663b21-afa1-4635-9a80-2852d44c8f7f
:END:
** Command: =helm-projectile-switch-to-buffer=, *C-c p b*
:PROPERTIES:
:ID:       d6eea79b-d77a-43e0-84ef-a5d7a157f7b6
:END:
List all opened buffers in *current project*. The command has a
similar subset of actions in =helm-projectile-find-file=, so once you
mastered the actions in =helm-projectile-find-file=, except instead of
opening files, you open buffers instead.
